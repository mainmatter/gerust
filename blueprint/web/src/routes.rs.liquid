{% if template_type == "default" -%}
use crate::state::AppState;
use axum::Router;
{% elsif template_type == "full" -%}
use crate::controllers::tasks;
use crate::middlewares::auth::auth;
use crate::state::AppState;
use axum::{
    middleware,
    routing::{delete, get, post, put},
    Router,
};
{%- elsif template_type == "minimal" %}
use crate::controllers::greeting;
use crate::state::AppState;
use axum::{routing::get, Router};
{%- endif %}
use std::sync::Arc;

/// Initializes the application's routes.
///
/// This function maps paths (e.g. "/greet") and HTTP methods (e.g. "GET") to functions in [`crate::controllers`] as well as includes middlewares defined in [`crate::middlewares`] into the routing layer (see [`axum::Router`]).
pub fn init_routes(app_state: AppState) -> Router {
let shared_app_state = Arc::new(app_state);
{% if template_type == "default" -%}
    Router::new().with_state(shared_app_state)
{% elsif template_type == "full" -%}
    Router::new()
        .route("/tasks", post(tasks::create))
        .route("/tasks", put(tasks::create_batch))
        .route("/tasks/:id", delete(tasks::delete))
        .route("/tasks/:id", put(tasks::update))
        .route_layer(middleware::from_fn_with_state(shared_app_state.clone(), auth))
        .route("/tasks", get(tasks::read_all))
        .route("/tasks/:id", get(tasks::read_one))
        .with_state(shared_app_state)
{%- elsif template_type == "minimal" %}
    Router::new()
        .route("/greet", get(greeting::hello))
        .with_state(shared_app_state)
{%- endif %}
}
